stages:
  - deploy

variables:
  DOCKER_IMAGE: mijewelmj/new-wordpress-image:latest

before_script:
  - apt-get update && apt-get install -y docker.io

deploy_staging:
  stage: deploy
  script:
    - echo "Deploying to the staging server..."
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - touch ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - echo "$STAGING_SSH_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - echo "Copying files to the staging server..."
    - scp -i ~/.ssh/id_rsa docker-compose.yml/ mj@$STAGING_IP:/home/mj/wordpress
    - scp -i ~/.ssh/id_rsa nginx.conf mj@$STAGING_IP:/home/mj/wordpress
    - echo "Executing docker-compose on the staging server..."
    - ssh -i ~/.ssh/id_rsa mj@$STAGING_IP bash -c "'
        cd /home/mj/wordpress/docker-compose/ &&
        docker-compose down &&
        docker-compose up -d
      '"
  only:
    refs:
      - staging
  environment:
    name: staging
  when: manual 
deploy_production:
  stage: deploy
  script:
    #- echo "Deploying to the production server..."
    #- mkdir -p ~/.ssh
    #- chmod 700 ~/.ssh
    #- echo "$PRODUCTION_SSH_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    #- chmod 600 ~/.ssh/id_rsa
    #- touch ~/.ssh/known_hosts
    #- chmod 644 ~/.ssh/known_hosts
    #- echo "Copying files to the production server..."
    - eval $(ssh-agent -s)
    - echo "$PRODUCTION_SSH_KEY" | ssh-add -
    - ssh-add -l
    - scp -vvv -o StrictHostKeyChecking=no docker-compose.yml mj@$PRODUCTION_IP:/home/mj/wordpress
    - scp docker-compose.yml/ mj@$PRODUCTION_IP:/home/mj/wordpress
    - scp -i ~/.ssh/id_rsa nginx.conf mj@$PRODUCTION_IP:/home/mj/wordpress
    - echo "Executing docker-compose.yml on the production server..."
    - ssh -i ~/.ssh/id_rsa mj@$PRODUCTION_IP bash -c "'
        cd /home/mj/wordpress/ &&
        docker-compose down &&
        docker-compose up -d
      '"
  only:
    refs:
      - main
  environment:
    name: production
  when: manual